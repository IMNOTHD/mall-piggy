<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.piggy.mallbackend.dao.ProductDao">
  <resultMap id="BaseResultMap" type="cn.piggy.mallbackend.domain.Product">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="product_category_id" jdbcType="BIGINT" property="productCategoryId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="publish_status" jdbcType="INTEGER" property="publishStatus" />
    <result column="sale" jdbcType="INTEGER" property="sale" />
    <result column="price" jdbcType="INTEGER" property="price" />
    <result column="stock" jdbcType="INTEGER" property="stock" />
    <result column="description" jdbcType="VARCHAR" property="description" />
    <result column="product_sn" jdbcType="VARCHAR" property="productSn" />
    <result column="admin_id" jdbcType="INTEGER" property="adminId" />
  </resultMap>
  <sql id="Base_Column_List">
    id, product_category_id, `name`, pic, publish_status, sale, price, stock, description, 
    product_sn, admin_id
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from product
    where id = #{id,jdbcType=BIGINT}
  </select>
  <select id="selectByAdminId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from product
    where admin_id = #{adminId}
    order by id ASC
    limit #{pageSize} offset #{pageOffset}
  </select>
  <select id="countByAdminId" resultType="java.lang.Integer">
    select count(*) from product where admin_id=#{adminId}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from product
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByProductSn" parameterType="java.lang.String">
    delete from product
    where product_sn = #{productSn}
  </delete>
  <insert id="insert" keyColumn="id" keyProperty="id" parameterType="cn.piggy.mallbackend.domain.Product" useGeneratedKeys="true">
    insert into product (product_category_id, `name`, pic, 
      publish_status, sale, price, 
      stock, description, product_sn, admin_id
      )
    values (#{productCategoryId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{pic,jdbcType=VARCHAR}, 
      #{publishStatus,jdbcType=INTEGER}, #{sale,jdbcType=INTEGER}, #{price,jdbcType=INTEGER}, 
      #{stock,jdbcType=INTEGER}, #{description,jdbcType=VARCHAR}, #{productSn,jdbcType=BIGINT}, #{adminId,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" keyColumn="id" keyProperty="id" parameterType="cn.piggy.mallbackend.domain.Product" useGeneratedKeys="true">
    insert into product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="productCategoryId != null">
        product_category_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="publishStatus != null">
        publish_status,
      </if>
      <if test="sale != null">
        sale,
      </if>
      <if test="price != null">
        price,
      </if>
      <if test="stock != null">
        stock,
      </if>
      <if test="description != null">
        description,
      </if>
      <if test="productSn != null">
        product_sn,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="productCategoryId != null">
        #{productCategoryId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="publishStatus != null">
        #{publishStatus,jdbcType=INTEGER},
      </if>
      <if test="sale != null">
        #{sale,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        #{price,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        #{stock,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="productSn != null">
        #{productSn,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="cn.piggy.mallbackend.domain.Product">
    update product
    <set>
      <if test="productCategoryId != null">
        product_category_id = #{productCategoryId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="publishStatus != null">
        publish_status = #{publishStatus,jdbcType=INTEGER},
      </if>
      <if test="sale != null">
        sale = #{sale,jdbcType=INTEGER},
      </if>
      <if test="price != null">
        price = #{price,jdbcType=INTEGER},
      </if>
      <if test="stock != null">
        stock = #{stock,jdbcType=INTEGER},
      </if>
      <if test="description != null">
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="productSn != null">
        product_sn = #{productSn,jdbcType=BIGINT},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="cn.piggy.mallbackend.domain.Product">
    update product
    set product_category_id = #{productCategoryId,jdbcType=BIGINT},
      `name` = #{name,jdbcType=VARCHAR},
      pic = #{pic,jdbcType=VARCHAR},
      publish_status = #{publishStatus,jdbcType=INTEGER},
      sale = #{sale,jdbcType=INTEGER},
      price = #{price,jdbcType=INTEGER},
      stock = #{stock,jdbcType=INTEGER},
      description = #{description,jdbcType=VARCHAR},
      product_sn = #{productSn,jdbcType=BIGINT}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="changePublishStatus">
    update product
    set publish_status = 1 - publish_status
    where product_sn = #{productSn};
  </update>
  <update id="changeStock">
    update product
    set stock = #{stock}
    where product_sn = #{productSn};
  </update>
</mapper>